version: "3.8"

services:
  database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: store_database
    volumes:
      - db_data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auth_network
      - store_network

  adminer:
    image: adminer
    ports:
    - "8080:8080"
    depends_on:
    - database
    networks:
    - auth_network
    - store_network

  authentication:
    build:
      context: .
      dockerfile: authentication/authentication.dockerfile
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_URL: database
      DATABASE_NAME: store_database
      PRODUCTION: "True"
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - auth_network

  owner:
    build:
      context: .
      dockerfile: owner/owner.dockerfile
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_URL: database
      DATABASE_NAME: store_database
      PRODUCTION: "True"
    ports:
      - "5001:5000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - store_network

  customer:
    build:
      context: .
      dockerfile: customer/customer.dockerfile
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_URL: database
      DATABASE_NAME: store_database
      PRODUCTION: "True"
    ports:
      - "5002:5000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - store_network

networks:
  auth_network:
    driver: bridge
  store_network:
    driver: bridge

volumes:
  db_data: